Pipes are pieces of code that pass information from one process to another. They are extremely simple and easy to use. However, if the information passed is too large, or if the receiving process is overloaded, pipes will break down. Shared memory receives all the information and any process can access the information in the memory; it acts as a databank. This system is more efficient, adaptable, and resilient, but it will take more code to configure. Overall, I think it would be better if we used shared memory. I think that shared memory is the better option because it is more efficient and easily configureable, which is necessary when there are many processors sending data simultaneously(the hydrophones). This way, it would be easy for the CPU to retrieve the data when necessary and then send it to other processes. In an example, if pipes are used and one fails, it could cause a chain reaction where a process requires multiple inputs to run. This could cripple the submarine. With shared memory, it is unlikely that the flow of inputs will stop , and if it does, shared memory keeps track of previous inputs so the submarine can either use the last given input or backtrack.